
class SFPriorityNotificationObserver
{
public:
	SFPriorityNotificationObserver(CCObject *target, SEL_CallFuncO selector);
	SFPriorityNotificationObserver(int nScriptHandler);
	~SFPriorityNotificationObserver();

	// for c++
	void performSelector(CCObject *obj);
	
	// for lua
	void performSelector(iBinaryReader* reader);

	CCObject* getTarget();
	SEL_CallFuncO getSelector();
	int getScriptHandler();

};

class SFPriorityNotificationCenter 
{
public:
	SFPriorityNotificationCenter(void);
	virtual ~SFPriorityNotificationCenter(void);

public:
	static SFPriorityNotificationCenter* sharedPriorityNotificationCenter();
	static void purgePriorityNotificationCenter(void);

public:
	void addObserver(int messageId, LUA_FUNCTION nScriptHandler);

	void removeObserver(CCObject *target,int messageId);
	void removeObserver(LUA_FUNCTION nScriptHandler, int messageId);

	// for c++
	void postNotification(int messageId, CCObject *object);

	// for lua
	void postNotification(int messageId, iBinaryReader* reader);

};

